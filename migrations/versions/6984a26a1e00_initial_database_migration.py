"""Initial database migration.

Revision ID: 6984a26a1e00
Revises: 
Create Date: 2025-09-18 14:00:46.288266

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6984a26a1e00'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_type', sa.String(length=80), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_price', sa.Float(), nullable=False),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_services_service_type'), ['service_type'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('pin', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_address'), ['address'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_pin'), ['pin'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('admin_blocked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('service_professionals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('document', sa.String(length=255), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_failed', sa.Boolean(), nullable=False),
    sa.Column('admin_blocked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('service_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('professional_id', sa.Integer(), nullable=True),
    sa.Column('proposed_price', sa.Float(), nullable=True),
    sa.Column('date_of_request', sa.DateTime(), nullable=False),
    sa.Column('date_of_completion', sa.DateTime(), nullable=True),
    sa.Column('service_status', sa.Enum('REQUESTED', 'ACCEPTED', 'REJECTED', 'CLOSED', name='servicestatus'), nullable=False),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['service_professionals.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('service_requests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_service_requests_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_requests_professional_id'), ['professional_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_requests_service_id'), ['service_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_requests_service_status'), ['service_status'], unique=False)

    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('professional_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('service_request_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['service_professionals.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['service_request_id'], ['service_requests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_request_id')
    )
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reviews_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_professional_id'), ['professional_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_service_id'), ['service_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reviews_service_id'))
        batch_op.drop_index(batch_op.f('ix_reviews_professional_id'))
        batch_op.drop_index(batch_op.f('ix_reviews_customer_id'))

    op.drop_table('reviews')
    with op.batch_alter_table('service_requests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_service_requests_service_status'))
        batch_op.drop_index(batch_op.f('ix_service_requests_service_id'))
        batch_op.drop_index(batch_op.f('ix_service_requests_professional_id'))
        batch_op.drop_index(batch_op.f('ix_service_requests_customer_id'))

    op.drop_table('service_requests')
    op.drop_table('service_professionals')
    op.drop_table('customers')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_pin'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_address'))

    op.drop_table('users')
    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_services_service_type'))

    op.drop_table('services')
    # ### end Alembic commands ###
